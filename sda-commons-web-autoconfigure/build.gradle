dependencies {

  compileOnly 'org.springframework.boot:spring-boot-autoconfigure-processor'

  api 'org.springframework.boot:spring-boot-starter-web'
  api 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  api 'org.springframework.boot:spring-boot-starter-oauth2-client'
  api 'org.springframework.boot:spring-boot-starter-validation'
  api 'org.springframework.boot:spring-boot-starter-actuator'
  api 'org.springframework.cloud:spring-cloud-starter-openfeign'
  api 'org.springframework.boot:spring-boot-starter-validation'
  api 'ch.qos.logback.contrib:logback-json-classic'
  api 'ch.qos.logback.contrib:logback-jackson'

  // Moving forward compatibility with the now OpenTelemetry standard (OTEL) is desirable.
  // Sleuth does not currently integrate this as itâ€™s extremely new, but as with most standards,
  // the Spring team are actively working on it (https://github.com/spring-cloud-incubator/spring-cloud-sleuth-otel ).

  // TODO migrate to open telemetry
  //api 'org.springframework.cloud:spring-cloud-starter-sleuth'
  //api 'org.springframework.cloud:spring-cloud-sleuth-zipkin'

  // Until recently Sleuth only supported the Zipkin B3 propagation type,
  // but now has support for the W3C format which is preferable moving forward.
  // By adding the brave-opentracing library, Sleuth will also automatically register an OpenTracing
  // Tracer bean allowing us to use the standardised interfaces
  // TODO migrate to open telemetry
  //  api 'io.opentracing.brave:brave-opentracing'
  //
  api 'org.springdoc:springdoc-openapi-starter-webmvc-api'
  api 'org.bouncycastle:bcpkix-jdk15on'
  api 'javax.ws.rs:javax.ws.rs-api'
  api 'io.github.openfeign:feign-jaxrs2'
  api 'io.github.openfeign:feign-micrometer'
  api 'io.micrometer:micrometer-registry-prometheus'
  api 'org.glassfish.jersey.core:jersey-common'

  api project(':sda-commons-metadata-context')
  api project(':sda-commons-error')

  testImplementation project(':sda-commons-web-testing')
  testImplementation 'org.junit-pioneer:junit-pioneer:2.0.1', {
    exclude group: 'org.junit'
  }
  testImplementation "io.github.classgraph:classgraph"
}
