import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
  }
}

plugins {
  id "jacoco"
  id "idea"
  id 'maven-publish'
  id "com.diffplug.spotless" version "6.7.2"
  id 'org.springframework.boot' version '2.6.7' apply false
}

ext {
  springCloudVersion = "2021.0.2"
  springBootVersion = "2.6.7"
}

repositories {
  mavenCentral()
}

group "org.sdase.commons.spring.boot"


subprojects {
  apply plugin: 'jacoco'
  apply plugin: 'idea'
  apply plugin: 'java'
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: "com.diffplug.spotless"
  apply plugin: 'org.springframework.boot'

  repositories {
    mavenCentral()
  }

  group "org.sdase.commons.spring.boot"

  sourceCompatibility = JavaVersion.VERSION_17

  // the version of the generated jars is based on the SEMANTIC_VERSION environment variable
  version = System.getenv("SEMANTIC_VERSION")

  dependencies {
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    implementation platform(SpringBootPlugin.BOM_COORDINATES)
  }

  test {
    useJUnitPlatform()
  }

  // configure the spotless to use the Google Java Format
  spotless {
    java {
      googleJavaFormat('1.15.0')
      enforceCheck = false
      licenseHeaderFile '../licenseHeaderFile'
    }
  }


  configurations.all {
    resolutionStrategy {
      // Current version matrix boot 2.6.4 with spring data resolves to 3.0.0
      // which does not fix the URL problem for newer versions
      force "de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.4.3"
    }
  }

  if (!it.name.endsWith("-example")) {
    publishing {
      publications {
        maven(MavenPublication) {
          from components.java
          pom {
            name = project.group + ":" + project.name
            description = 'A libraries to bootstrap services easily that follow the patterns and specifications promoted by the SDA SE'
            url = 'https://github.com/SDA-SE/sda-spring-boot-commons'

            organization {
              name = 'SDA SE Open Industry Solutions'
              url = 'https://sda.se'
            }

            issueManagement {
              system = 'GitHub'
              url = 'https://github.com/SDA-SE/sda-spring-boot-commons/issues'
            }

            scm {
              connection = 'scm:git:https://github.com/SDA-SE/sda-spring-boot-commons.git'
              developerConnection = 'scm:git:https://github.com/SDA-SE/sda-spring-boot-commons.git'
              url = 'https://github.com/SDA-SE/sda-spring-boot-commons'
            }
          }
        }
      }

      repositories {
        maven {
          name = "sdaIntern"
          def releasesRepoUrl = "https://nexus.sda-se.io/repository/sda-se-releases/"
          def snapshotsRepoUrl = "https://nexus.sda-se.io/repository/sda-se-snapshots/"
          url = version.endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

          credentials {
            username System.getenv('SDA_NEXUS_USER')
            password System.getenv('SDA_NEXUS_PASSWORD')
          }
        }

        maven {
          name = "project"
          url = uri("${buildDir}/publishing-repository")
        }
      }
    }

  }
  // output XML reports for SonarCloud
  jacocoTestReport {
    reports {
      xml.required = true
    }
  }

}

wrapper { gradleVersion = '7.4.2' }
