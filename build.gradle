plugins {
  id "jacoco"
  id "idea"
  id "java"
  id "com.diffplug.spotless" version "6.3.0"
  id 'org.springframework.boot' version '2.5.6'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

ext {
  springCloudVersion = "2020.0.5"
}

subprojects {
  apply plugin: 'jacoco'
  apply plugin: 'idea'
  apply plugin: 'java'
  apply plugin: "com.diffplug.spotless"
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'

  repositories {
    mavenCentral()
  }

  dependencies {
    implementation enforcedPlatform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    implementation 'org.springframework.boot:spring-boot-autoconfigure'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.awaitility:awaitility:4.1.1'
  }

  test {
    useJUnitPlatform()
  }

  // configure the spotless to use the Google Java Format
  spotless {
    java {
      googleJavaFormat('1.14.0')
      enforceCheck = false
      licenseHeaderFile '../licenseHeaderFile'
    }
  }

  configurations.all {
    resolutionStrategy {
      // fail eagerly on version conflict (includes transitive dependencies)
      // e.g. multiple different versions of the same dependency (group and name are equal)
      failOnVersionConflict()
    }
    idea.module.inheritOutputDirs = true
  }

}


group "org.sdase.commons.spring"

wrapper { gradleVersion = '6.5' }

sourceCompatibility = JavaVersion.VERSION_11

// the version of the generated jars is based on the SEMANTIC_VERSION environment variable
version = System.getenv('SEMANTIC_VERSION')

// output XML reports for SonarCloud
jacocoTestReport {
  reports {
    xml.required = true
  }
}