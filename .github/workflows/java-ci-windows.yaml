# This workflow builds and tests on Windows.
# The Windows check is extracted from the Matrix in Java CI because it is a lot slower and blocks
# subsequent checks.
name: Java CI Windows

on:
  push:
    branches:
      - main
  pull_request:
jobs:
  # build library
  build:
    name: build (${{ matrix.java_version }}, windows-latest)
    runs-on: ${{ matrix.os }}

    strategy:
      # always run all tests to avoid having different amounts of tests.
      fail-fast: false
      matrix:
        java_version: [ '17' ]
        os: [ 'windows-2022' ]

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0 # fetch commit log so that Sonar is able to assign committers to issues

      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
          cache: 'gradle'

      - name: Test with Gradle
        uses: nick-fields/retry@v3.0.0
        with:
          timeout_minutes: 30
          max_attempts: 5
          retry_wait_seconds: 10
          warning_on_retry: false
          command: ./gradlew --parallel --continue check -x spotlessCheck

      - name: Generate Test Report
        if: always()
        run: ./gradlew -x test testReport codeCoverageReport

      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # tag=v3
        if: always()
        with:
          name: windows-latest-${{ matrix.java_version }}-test-results
          path: |
            build/reports/
            */build/test-results/**/*.xml
          retention-days: 7
