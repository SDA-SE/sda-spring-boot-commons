# This workflow builds, tests, and releases the modules.
name: Java CI

on:
  push:
    branches:
      - master
  pull_request:
jobs:
  # build library
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # always run all tests to avoid having different amounts of tests.
      fail-fast: false
      matrix:
        java_version: [ '17' ]
        os: [ 'ubuntu-latest' ]

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0 # fetch commit log so that Sonar is able to assign committers to issues

      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
          cache: 'gradle'

      - name: Test with Gradle
        uses: nick-fields/retry@v2.8.2
        with:
          timeout_minutes: 30
          max_attempts: 5
          retry_wait_seconds: 10
          warning_on_retry: false
          command: ./gradlew --parallel --continue check -x spotlessCheck

      - name: Generate Test Report
        if: always()
        run: ./gradlew -x test testReport codeCoverageReport

      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        if: always()
        with:
          name: ${{ matrix.os }}-${{ matrix.java_version }}-test-results
          path: |
            build/reports/
            */build/test-results/**/*.xml
          retention-days: 7

  publish-test-results:
    name: "Publish Unit Tests Results"
    timeout-minutes: 60
    needs: build
    runs-on: ubuntu-latest
    # Don't run for forks and dependabot because of missing secrets
    if: (success() || failure()) && !(github.event.pull_request && github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@713caf1dd6f1c273144546ed2d79ca24a01f4623 # tag=v2.1.0
        with:
          junit_files: "**/build/test-results/**/*.xml"

  semantic-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Install Semantic release
        run: |
          sudo npm install -g \
            semantic-release@18.0.0 \
            @semantic-release/git@10.0.0 \
            @semantic-release/release-notes-generator@10.0.2 \
            @semantic-release/github@8.0.0

      - name: sda-spring-boot-commons-app token
        if: "!(github.event.pull_request && github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]'"
        id: app-token
        uses: getsentry/action-github-app-token@38a3ce582e170ddfe8789f509597c6944f2292a9 # tag=v1.0.6
        with:
          app_id: ${{ secrets.GH_PUBLISH_APP_ID }}
          private_key: ${{ secrets.GH_PUBLISH_APP_PRIVATE_KEY }}

      - name: Release and Publish
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}